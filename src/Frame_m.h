//
// Generated file, do not edit! Created by nedtool 5.0 from src/Frame.msg.
//

#ifndef __FRAME_M_H
#define __FRAME_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/Frame.msg:3</tt> by nedtool.
 * <pre>
 * packet GenericFrame
 * {
 *     int src;
 *     int dest;
 *     int type;
 *     long seqNum;
 *     long responseBytes;
 * }
 * </pre>
 */
class GenericFrame : public ::omnetpp::cPacket
{
  protected:
    int src;
    int dest;
    int type;
    long seqNum;
    long responseBytes;

  private:
    void copy(const GenericFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GenericFrame&);

  public:
    GenericFrame(const char *name=nullptr, int kind=0);
    GenericFrame(const GenericFrame& other);
    virtual ~GenericFrame();
    GenericFrame& operator=(const GenericFrame& other);
    virtual GenericFrame *dup() const {return new GenericFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getSrc() const;
    virtual void setSrc(int src);
    virtual int getDest() const;
    virtual void setDest(int dest);
    virtual int getType() const;
    virtual void setType(int type);
    virtual long getSeqNum() const;
    virtual void setSeqNum(long seqNum);
    virtual long getResponseBytes() const;
    virtual void setResponseBytes(long responseBytes);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const GenericFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, GenericFrame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __FRAME_M_H

